{"version":3,"sources":["/src/app/app.ts","/src/views/main-window/index.ts","/src/views/main-window/main-window.ts","/src/views/main-window/load-url.ts","/src/app/lib/updater/index.ts","/src/app/lib/updater/updater.ts","/src/widget/menu/index.ts","/src/widget/menu/menu.ts","/src/widget/menu/linux-menu.ts","/src/widget/menu/shared-menu.ts","/src/widget/menu/windows-menu.ts","/src/app/lib/platform/index.ts","/src/app/lib/platform/platform.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import 'linqable.ts/build/Extensions';\r\nimport { app, dialog, ipcMain } from \"electron\"\r\nimport \"./Tools/BufferExtension\";\r\nimport * as log from \"electron-log\";\r\nimport * as isDev from \"electron-is-dev\";\r\nimport { createMainWindow, loadURL } from \"./../views/main-window\";\r\nimport { createUpdater } from \"./lib/updater\";\r\nimport { createMenu } from \"./../widget/menu\";\r\n// -======================================================-\r\nlog.transports.file.level = isDev ? false : \"info\"\r\nlog.transports.console.level = isDev ? \"debug\" : false\r\n\r\n\r\nlet window: Electron.BrowserWindow;\r\n\r\nconst appPath = app.getAppPath()\r\n\r\n\r\napp.on(\"ready\", () => {\r\nwindow = createMainWindow(appPath)\r\n    createMenu(window)\r\n\r\n    if (isDev) {\r\n        window.webContents.on(\"did-fail-load\", () => {\r\n        dialog.showErrorBox(\r\n            \"Error opening storybook\",\r\n            'Storybook failed to open. Please ensure the storybook server is running by executing \"npm run storybook\"',\r\n        )\r\n        })\r\n    }\r\n    ipcMain.on(\"storybook-toggle\", () => {\r\n        loadURL(window, appPath);\r\n    })\r\n});\r\napp.on(\"window-all-closed\", app.quit)\r\ncreateUpdater(app)","export * from \"./main-window\"\nexport * from \"./load-url\"","const { app, BrowserWindow } = require(\"electron\")\nconst WindowStateManager = require(\"electron-window-state-manager\")\nimport { loadURL } from \"./load-url\";\n\nexport const DIMENSIONS = { width: 600, height: 500, minWidth: 450, minHeight: 450 }\n\n\n/**\n * Creates the main window.\n *\n * @param appPath The path to the bundle root.\n * @param showDelay How long in ms before showing the window after the renderer is ready.\n * @return The main BrowserWindow.\n */\nexport function createMainWindow(appPath: string, showDelay: number = 100) {\n    // persistent window state manager\n    const windowState = new WindowStateManager(\"main\", {\n      defaultWidth: DIMENSIONS.width,\n      defaultHeight: DIMENSIONS.height,\n    })\n  \n    // create our main window\n    const window = new BrowserWindow({\n      minWidth: DIMENSIONS.minWidth,\n      minHeight: DIMENSIONS.minHeight,\n      width: windowState.width,\n      height: windowState.height,\n      x: windowState.x,\n      y: windowState.y,\n      show: false,\n      useContentSize: true,\n      titleBarStyle: \"hiddenInset\",\n      autoHideMenuBar: true,\n      // backgroundColor: '#fff',\n      vibrancy: \"light\",\n      transparent: true,\n      title: app.getName(),\n      webPreferences: {\n        backgroundThrottling: false,\n        textAreasAreResizable: false,\n      },\n    })\n  \n    // maximize if we did before\n    if (windowState.maximized) {\n      window.maximize()\n    }\n  \n    // trap movement events\n    window.on(\"close\", () => windowState.saveState(window))\n    window.on(\"move\", () => windowState.saveState(window))\n    window.on(\"resize\", () => windowState.saveState(window))\n  \n    // load entry html page in the renderer.\n    loadURL(window, appPath)\n  \n    // only appear once we've loaded\n    window.webContents.on(\"did-finish-load\", () => {\n      setTimeout(() => {\n        window.show()\n        window.focus()\n      }, showDelay)\n    })\n  \n    return window\n  }","import { join } from \"path\"\nimport { format } from \"url\"\n\nexport function loadURL(window: Electron.BrowserWindow,appPath: string) {\n    window.loadURL(\n    format({\n        pathname: join(appPath, \"out/index.html\"),\n        protocol: \"file:\",\n        slashes: true,\n    }),\n    )\n};","export * from \"./updater\"","import { autoUpdater } from \"electron-updater\"\nimport * as log from \"electron-log\"\nimport * as isDev from \"electron-is-dev\"\n\n\n/**\n * Should we peform the auto-update check?\n */\nconst shouldCheck = !isDev;\n\n\n/**\n * Setup the auto-update capabilities.\n *\n * @param app The electron app.\n */\nexport function createUpdater(app: Electron.App): void {\n    // jet if we shouldn't be here\n    if (!shouldCheck) {\n      return\n    }\n  \n    // configure the autoUpdater's logger\n    autoUpdater.logger = log\n  \n    // fires when the app is ready\n    app.on(\"ready\", () => {\n      autoUpdater.checkForUpdates()\n    })\n  \n    autoUpdater.on(\"checking-for-update\", () => {\n      log.info(\"checking for update\")\n    })\n  \n    autoUpdater.on(\"update-available\", (info: string) => {\n      log.info(\"update available\")\n    })\n  \n    autoUpdater.on(\"update-not-available\", (info: string) => {\n      log.info(\"update not available\")\n    })\n  \n    autoUpdater.on(\"error\", (err: Error) => {\n      log.error(\"error updating\", err.message)\n    })\n  \n    autoUpdater.signals.progress(info => {\n      log.info(`${info.percent}%`)\n    })\n  \n    // fires when an update has been downloaded\n    autoUpdater.signals.updateDownloaded(info => {\n      log.info(\"update downloaded\")\n      autoUpdater.quitAndInstall()\n    })\n  }\n\n\n","export * from \"./menu\"","import { Menu } from \"electron\"\nimport { createLinuxMenu } from \"./linux-menu\"\nimport { createWindowsMenu } from \"./windows-menu\"\nimport { isLinux, isWindows } from \"../../app/lib/platform\"\n\n/**\n * Attaches the menu to the appropriate place.\n *\n * @param window The main window.\n */\nexport function createMenu(window: Electron.BrowserWindow) {\n  if (isLinux()) {\n    const template = createLinuxMenu(window)\n    const menu = Menu.buildFromTemplate(template)\n    window.setMenu(menu)\n  } else if (isWindows()) {\n    const template = createWindowsMenu(window)\n    const menu = Menu.buildFromTemplate(template)\n    window.setMenu(menu)\n  }\n}","import { createSharedMenuItems } from \"./shared-menu\"\nimport * as isDev from \"electron-is-dev\"\n\nexport function createLinuxMenu(\n  window: Electron.BrowserWindow,\n): Electron.MenuItemConstructorOptions[] {\n  const shared = createSharedMenuItems(window)\n\n  const fileMenu: Electron.MenuItemConstructorOptions = {\n    label: \"&File\",\n    submenu: [{ ...shared.quit, accelerator: \"Alt+F4\" }],\n  }\n\n  const viewMenu: Electron.MenuItemConstructorOptions = {\n    label: \"View\",\n    submenu: isDev\n      ? [\n          { ...shared.reload, accelerator: \"Ctrl+R\" },\n          { ...shared.storybook, accelerator: \"Ctrl+Shift+S\" },\n          { ...shared.toggleDevTools, accelerator: \"Ctrl+Alt+I\" },\n        ]\n      : [{ ...shared.fullScreen, accelerator: \"Ctrl+Alt+F\" }],\n  }\n\n  const helpMenu: Electron.MenuItemConstructorOptions = {\n    label: \"Help\",\n    submenu: [process.env.HOMEPAGE && shared.visit].filter(Boolean),\n  }\n\n  return [fileMenu, viewMenu, helpMenu]\n}","import { shell, ipcMain } from \"electron\"\n\nexport function createSharedMenuItems(window: Electron.BrowserWindow) {\n  const visit: Electron.MenuItemConstructorOptions = {\n    label: \"On The Web\",\n    click() {\n      if (process.env.HOMEPAGE) {\n        shell.openExternal(process.env.HOMEPAGE)\n      }\n    },\n  }\n\n  const reload: Electron.MenuItemConstructorOptions = {\n    label: \"Reload\",\n    click() {\n      window.webContents.reload()\n    },\n  }\n\n  const storybook: Electron.MenuItemConstructorOptions = {\n    label: \"Toggle Storybook\",\n    click() {\n      ipcMain.emit(\"storybook-toggle\")\n    },\n  }\n\n  const quit: Electron.MenuItemConstructorOptions = { label: \"Quit\", role: \"quit\" }\n\n  const toggleDevTools: Electron.MenuItemConstructorOptions = {\n    label: \"Toggle Developer Tools\",\n    click() {\n      window.webContents.toggleDevTools()\n    },\n  }\n\n  const fullScreen: Electron.MenuItemConstructorOptions = {\n    label: \"Toggle Full Screen\",\n    click() {\n      window.setFullScreen(!window.isFullScreen())\n    },\n  }\n\n  return {\n    visit,\n    reload,\n    storybook,\n    quit,\n    toggleDevTools,\n    fullScreen,\n  }\n}","import { createSharedMenuItems } from \"./shared-menu\"\nimport * as isDev from \"electron-is-dev\"\n\nexport function createWindowsMenu(\n  window: Electron.BrowserWindow,\n): Electron.MenuItemConstructorOptions[] {\n  const shared = createSharedMenuItems(window)\n\n  const fileMenu: Electron.MenuItemConstructorOptions = {\n    label: \"&File\",\n    submenu: [{ ...shared.quit, accelerator: \"Alt+F4\" }],\n  }\n\n  const viewMenu: Electron.MenuItemConstructorOptions = {\n    label: \"View\",\n    submenu: isDev\n      ? [\n          { ...shared.reload, accelerator: \"Ctrl+R\" },\n          { ...shared.storybook, accelerator: \"Ctrl+Shift+S\" },\n          { ...shared.toggleDevTools, accelerator: \"Ctrl+Alt+I\" },\n        ]\n      : [{ ...shared.fullScreen, accelerator: \"Ctrl+Alt+F\" }],\n  }\n\n  const helpMenu: Electron.MenuItemConstructorOptions = {\n    label: \"Help\",\n    submenu: [process.env.HOMEPAGE && shared.visit].filter(Boolean),\n  }\n\n  return [fileMenu, viewMenu, helpMenu]\n}","export * from \"./platform\"","export function isLinux(platform = process.platform) {\n    return platform === \"linux\"\n}\n  \nexport function isWindows(platform = process.platform) {\n    return platform === \"win32\"\n}\n\nexport function isMac(platform = process.platform) {\n    return platform === \"darwin\"\n}"]}